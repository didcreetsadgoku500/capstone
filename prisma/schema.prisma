generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Permission {
  id     BigInt @id @default(autoincrement())
  userId String
  scope  String
  role   String
}

model Tournament {
  tournamentId  BigInt          @id @default(autoincrement())
  tourName      String
  tourDesc      String
  gamemode      Gamemode
  bannerUrl     String          @default("/strafeSmoke.jpg")
  maxRank       Int?
  minRank       Int?
  usesBWS       Boolean?
  public        Boolean         @default(false)
  registrations Registrations[]
  stages        Stage[]
}

model Stage {
  tournamentId BigInt
  stageNo      Int        @default(sequence(maxValue: 2147483647))
  stageName    String
  isBracket    Boolean
  public       Boolean    @default(false)
  mappool      Mappool[]
  matches      Match[]
  tournament   Tournament @relation(fields: [tournamentId], references: [tournamentId], onDelete: Cascade)

  @@id([tournamentId, stageNo])
}

model Match {
  tournamentId  BigInt
  stageNo       Int
  matchId       Int         @default(sequence())
  team1Score    Int         @default(0)
  team2Score    Int         @default(0)
  team1Id       String?
  team2Id       String?
  matchStatus   MatchStatus
  matchDateTime DateTime?
  referee       String?
  stage         Stage       @relation(fields: [tournamentId, stageNo], references: [tournamentId, stageNo], onDelete: Cascade)

  @@id([tournamentId, matchId])
}

model Mappool {
  mappoolItemId BigInt @id @default(autoincrement())
  tournamentId  BigInt
  stageNo       Int
  mapId         Int?
  mods          String
  modIndex      Int
  stage         Stage  @relation(fields: [tournamentId, stageNo], references: [tournamentId, stageNo], onDelete: Cascade)
}

model Registrations {
  regId        BigInt     @id @default(autoincrement())
  tournamentId BigInt
  userId       String
  tournament   Tournament @relation(fields: [tournamentId], references: [tournamentId], onDelete: Cascade)
}

enum Gamemode {
  STANDARD
  TAIKO
  CTB
  MANIA
}

enum MatchStatus {
  NOT_STARTED
  IN_PROGRESS
  PAUSED
  ENDED
}
